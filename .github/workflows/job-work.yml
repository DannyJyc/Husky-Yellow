# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  schedule:
    - cron: '0 1 * * *'
  watch:
    types: started

jobs:
  # This workflow contains a single job called "build"
  social:
    timeout-minutes: 10
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: npm install

      - name: Generate README file
        run: node index.js

      - name: Push new README.md
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.AC_TOKEN }}
          
  blog:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: social
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: npm install
          
      - uses: gautamkrishnar/blog-post-workflow@master
        with:
          feed_list: "http://localhost:1200/juejin/posts/3526889033444855"
          
      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: set git config 
      run: |
        git config --global user.name "Husky-Yellow"
        git config --global user.email "473795376@qq.com"
    - name: git pull erp
      run: |
        git pull
    - name: run srcipt
      run: |
        python 163music.py 341893546 1
    - name: commit to rep
      run: |
        git add README.md
        git commit --allow-empty -m "Update README.md"
        git push

